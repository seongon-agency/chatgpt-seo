{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOoqr3tu+3NvFnuOSxo25pf",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/seongon-agency/chatgpt-seo/blob/main/chatgpt-supabase-to-dashboard\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Kujv8J42vh_X",
        "outputId": "eb17df82-3fff-445a-d663-feaedd42c189"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting vecs\n",
            "  Downloading vecs-0.4.5.tar.gz (22 kB)\n",
            "  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n",
            "  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n",
            "  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "Collecting pgvector==0.3.* (from vecs)\n",
            "  Downloading pgvector-0.3.6-py3-none-any.whl.metadata (13 kB)\n",
            "Requirement already satisfied: sqlalchemy==2.* in /usr/local/lib/python3.12/dist-packages (from vecs) (2.0.43)\n",
            "Collecting psycopg2-binary==2.9.* (from vecs)\n",
            "  Downloading psycopg2_binary-2.9.10-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.9 kB)\n",
            "Collecting flupy==1.* (from vecs)\n",
            "  Downloading flupy-1.2.3-py3-none-any.whl.metadata (4.2 kB)\n",
            "Collecting deprecated==1.2.* (from vecs)\n",
            "  Downloading Deprecated-1.2.18-py2.py3-none-any.whl.metadata (5.7 kB)\n",
            "Requirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.12/dist-packages (from deprecated==1.2.*->vecs) (1.17.3)\n",
            "Requirement already satisfied: typing_extensions>=4 in /usr/local/lib/python3.12/dist-packages (from flupy==1.*->vecs) (4.14.1)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.12/dist-packages (from pgvector==0.3.*->vecs) (2.0.2)\n",
            "Requirement already satisfied: greenlet>=1 in /usr/local/lib/python3.12/dist-packages (from sqlalchemy==2.*->vecs) (3.2.4)\n",
            "Downloading Deprecated-1.2.18-py2.py3-none-any.whl (10.0 kB)\n",
            "Downloading flupy-1.2.3-py3-none-any.whl (12 kB)\n",
            "Downloading pgvector-0.3.6-py3-none-any.whl (24 kB)\n",
            "Downloading psycopg2_binary-2.9.10-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.0/3.0 MB\u001b[0m \u001b[31m26.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hBuilding wheels for collected packages: vecs\n",
            "  Building wheel for vecs (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for vecs: filename=vecs-0.4.5-py3-none-any.whl size=23934 sha256=57c27b02f843c6cdc9508b89532d501ba42dbcf52e2f467db4336e6598f3afcc\n",
            "  Stored in directory: /root/.cache/pip/wheels/7d/6f/b0/7b179069125cbd65c5f83a084b301f65d4db308de2a751f6d9\n",
            "Successfully built vecs\n",
            "Installing collected packages: psycopg2-binary, pgvector, flupy, deprecated, vecs\n",
            "Successfully installed deprecated-1.2.18 flupy-1.2.3 pgvector-0.3.6 psycopg2-binary-2.9.10 vecs-0.4.5\n"
          ]
        }
      ],
      "source": [
        "pip install vecs"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import vecs\n",
        "\n",
        "DB_CONNECTION = \"postgresql://postgres.sjfwunrvzgqqpfinlkrw:SEONGONAITeam%402025@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres\"\n",
        "\n",
        "# create vector store client\n",
        "vx = vecs.create_client(DB_CONNECTION)"
      ],
      "metadata": {
        "id": "yIQhGaSQwAhf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "collection = vx.get_or_create_collection(name=\"colab_collection\", dimension=3)\n",
        "\n",
        "collection.upsert(\n",
        "    records=[\n",
        "        (\n",
        "         \"vec0\",           # the vector's identifier\n",
        "         [0.1, 0.2, 0.3],  # the vector. list or np.array\n",
        "         {\"year\": 1973}    # associated  metadata\n",
        "        ),\n",
        "        (\n",
        "         \"vec1\",\n",
        "         [0.7, 0.8, 0.9],\n",
        "         {\"year\": 2012}\n",
        "        )\n",
        "    ]\n",
        ")"
      ],
      "metadata": {
        "id": "jYMLTJdoxXaq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pip install --upgrade --quiet  supabase"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ye3LjYS77bis",
        "outputId": "3ff3af28-7339-4ad7-f4ba-6b1b7a0a2ec9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[?25l   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/44.4 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.4/44.4 kB\u001b[0m \u001b[31m2.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**XUẤT DỮ LIỆU CHO PHONG THUỶ PHÙNG GIA**\n",
        "≈"
      ],
      "metadata": {
        "id": "hMsTjPd24wEO"
      }
    },
    {
      "source": [
        "from google.colab import sheets\n",
        "\n",
        "# Convert UUID column to string before exporting to sheets\n",
        "df['prompt_run_id'] = df['prompt_run_id'].astype(str)\n",
        "\n",
        "sheet = sheets.InteractiveSheet(df=df)"
      ],
      "cell_type": "code",
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "https://docs.google.com/spreadsheets/d/1ijXJI1FJb19xESW8IStU7xcRZGwdcNRWPPFSn8af2Ow/edit#gid=0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.lib.display.IFrame at 0x795b6f757d40>"
            ],
            "text/html": [
              "\n",
              "        <iframe\n",
              "            width=\"100%\"\n",
              "            height=\"600\"\n",
              "            src=\"https://docs.google.com/spreadsheets/d/1ijXJI1FJb19xESW8IStU7xcRZGwdcNRWPPFSn8af2Ow/edit?rm=embedded#gid=0\"\n",
              "            frameborder=\"0\"\n",
              "            allowfullscreen\n",
              "            \n",
              "        ></iframe>\n",
              "        "
            ]
          },
          "metadata": {}
        }
      ],
      "metadata": {
        "cellView": "form",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 659
        },
        "id": "WlFLyPs_V8Lh",
        "outputId": "269f892d-23f9-4d29-d73b-54471c116c0e"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "id": "37d4c6e0",
        "outputId": "568b8bc5-8178-4923-e9f9-b1a3ff3d9861"
      },
      "source": [
        "# Define the mapping for company name integration\n",
        "company_name_mapping = {\n",
        "    'Master Phùng Phương': 'Phong Thủy Phùng Gia',\n",
        "    'Thầy Tam Nguyên': 'Phong Thủy Tam Nguyên',\n",
        "    'Công ty TNHH Kiến Trúc Phong Thủy Tam Nguyên': 'Phong Thủy Tam Nguyên',\n",
        "    'Tam Nguyên Phong Thủy': 'Phong Thủy Tam Nguyên',\n",
        "    'Tam Nguyên Feng Shui Architecture': 'Phong Thủy Tam Nguyên',\n",
        "    'Đồ Thờ & Phong Thủy Sơn Xuyên': 'Sơn Xuyên',\n",
        "    'Đá Phong Thủy An Phát': 'Phong Thủy An Phát',\n",
        "    'Phạm Cường Consulting': 'KTS Phạm Cương',\n",
        "    'Trung tâm Phong Thủy Đại Nam': 'Phong Thủy Đại Nam',\n",
        "    'Đại Nam Phong Thủy': 'Đại Nam Phong Thủy', # Corrected mapping based on previous context\n",
        "    'Chuyên gia Nguyễn Song Hà': 'Phong Thủy Song Hà (Nguyễn Song Hà)',\n",
        "    'Công ty Phong Thủy Song Hà': 'Phong Thủy Song Hà (Nguyễn Song Hà)',\n",
        "    'Song Hạ Phong Thủy': 'Phong Thủy Song Hà (Nguyễn Song Hà)'\n",
        "}\n",
        "\n",
        "# Apply the mapping to the 'company_name' column\n",
        "df['company_name'] = df['company_name'].replace(company_name_mapping)\n",
        "\n",
        "# Exclude rows where company_name is in the list\n",
        "excluded_companies = ['Tiki', 'Lazada', 'TopList.vn', 'MyTour.vn', 'Oplungiphone.net', 'Chiaki.vn']\n",
        "df = df[~df['company_name'].isin(excluded_companies)].copy()\n",
        "\n",
        "\n",
        "# Calculate total number of mentions after filtering\n",
        "total_mentions = df['mention_position'].notna().sum()\n",
        "\n",
        "# Calculate mention probability for each company after filtering\n",
        "mention_counts = df.groupby('company_name')['mention_position'].count()\n",
        "mention_probability = mention_counts / total_mentions\n",
        "\n",
        "# Calculate average mention position for each company after filtering\n",
        "average_mention_position_mention = df.groupby('company_name')['mention_position'].mean()\n",
        "\n",
        "# Add the new columns to the DataFrame\n",
        "df['mention_probability'] = df['company_name'].map(mention_probability)\n",
        "df['mention_count'] = df['company_name'].map(mention_counts)\n",
        "df['average_mention_position'] = df['company_name'].map(average_mention_position_mention)\n",
        "\n",
        "# Group by company_name and select the first occurrence of the probability and new columns\n",
        "company_probability_df = df.groupby('company_name')[['mention_probability', 'mention_count', 'average_mention_position']].first().reset_index()\n",
        "\n",
        "display(company_probability_df.head())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                company_name  mention_probability  mention_count  \\\n",
              "0                   An Nhiên             0.009908           15.0   \n",
              "1                    Ancarat             0.009908           15.0   \n",
              "2        Biện Như Thinh Blog             0.012550           19.0   \n",
              "3                 Buonda.com             0.009908           15.0   \n",
              "4  Chuyên gia Trần Mạnh Linh             0.011889           18.0   \n",
              "\n",
              "   average_mention_position  \n",
              "0                       3.0  \n",
              "1                      15.0  \n",
              "2                       2.0  \n",
              "3                       7.0  \n",
              "4                       6.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-48159ebf-9198-4389-bdf4-8276d6ff791c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>company_name</th>\n",
              "      <th>mention_probability</th>\n",
              "      <th>mention_count</th>\n",
              "      <th>average_mention_position</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>An Nhiên</td>\n",
              "      <td>0.009908</td>\n",
              "      <td>15.0</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Ancarat</td>\n",
              "      <td>0.009908</td>\n",
              "      <td>15.0</td>\n",
              "      <td>15.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Biện Như Thinh Blog</td>\n",
              "      <td>0.012550</td>\n",
              "      <td>19.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Buonda.com</td>\n",
              "      <td>0.009908</td>\n",
              "      <td>15.0</td>\n",
              "      <td>7.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Chuyên gia Trần Mạnh Linh</td>\n",
              "      <td>0.011889</td>\n",
              "      <td>18.0</td>\n",
              "      <td>6.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48159ebf-9198-4389-bdf4-8276d6ff791c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-48159ebf-9198-4389-bdf4-8276d6ff791c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-48159ebf-9198-4389-bdf4-8276d6ff791c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-51ef0590-e991-4c2c-b2af-86b2161c00de\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-51ef0590-e991-4c2c-b2af-86b2161c00de')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-51ef0590-e991-4c2c-b2af-86b2161c00de button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(company_probability_df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"company_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Ancarat\",\n          \"Chuy\\u00ean gia Tr\\u1ea7n M\\u1ea1nh Linh\",\n          \"Bi\\u1ec7n Nh\\u01b0 Thinh Blog\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mention_probability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0012875553956154511,\n        \"min\": 0.009907529722589167,\n        \"max\": 0.012549537648612946,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.009907529722589167,\n          0.012549537648612946,\n          0.011889035667107\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mention_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.9493588689617927,\n        \"min\": 15.0,\n        \"max\": 19.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          15.0,\n          19.0,\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_mention_position\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.128352561983234,\n        \"min\": 2.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          15.0,\n          6.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 659
        },
        "id": "e93a47ae",
        "outputId": "658bc276-3d42-49fe-bdaf-97d00e05bf75"
      },
      "source": [
        "sheet_company_probabilities_new = sheets.InteractiveSheet(df=company_probability_df)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "https://docs.google.com/spreadsheets/d/147G-SQEcv08b39D7mNZDCB2Pf7N5ZsBbsFJFEsz4ha0/edit#gid=0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.lib.display.IFrame at 0x795b6f757740>"
            ],
            "text/html": [
              "\n",
              "        <iframe\n",
              "            width=\"100%\"\n",
              "            height=\"600\"\n",
              "            src=\"https://docs.google.com/spreadsheets/d/147G-SQEcv08b39D7mNZDCB2Pf7N5ZsBbsFJFEsz4ha0/edit?rm=embedded#gid=0\"\n",
              "            frameborder=\"0\"\n",
              "            allowfullscreen\n",
              "            \n",
              "        ></iframe>\n",
              "        "
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate total number of citations for each source domain\n",
        "total_citation_counts_by_domain = df.groupby('source_domain').size()\n",
        "\n",
        "# Calculate the number of citations not under the \"more section\" for each source domain\n",
        "not_under_more_section_counts_by_domain = df[df['source_under_more_section'] == False].groupby('source_domain').size()\n",
        "\n",
        "# Calculate the average citation position for each source domain\n",
        "average_citation_position_by_domain = df.groupby('source_domain')['citation_position'].mean()\n",
        "\n",
        "# Calculate total number of citations across all source domains\n",
        "total_citations_all_domains = df.shape[0]\n",
        "\n",
        "# Calculate citation probability for each source domain\n",
        "citation_probability_by_domain = total_citation_counts_by_domain / total_citations_all_domains\n",
        "\n",
        "# Calculate the percentage of citations not under the \"more section\" for each source domain\n",
        "percentage_not_under_more_section_by_domain = (not_under_more_section_counts_by_domain / total_citation_counts_by_domain).fillna(0)\n",
        "\n",
        "# Calculate the contribution of each source domain to the overall data percentage\n",
        "overall_percentage_contribution_by_domain = (total_citation_counts_by_domain / total_citations_all_domains)\n",
        "\n",
        "\n",
        "# Combine the calculated metrics into a DataFrame for display\n",
        "source_domain_summary_df = pd.DataFrame({\n",
        "    'Total Citation Counts': total_citation_counts_by_domain,\n",
        "    'Not Under More Section Counts': not_under_more_section_counts_by_domain,\n",
        "    'Average Citation Position': average_citation_position_by_domain,\n",
        "    'Citation Probability': citation_probability_by_domain,\n",
        "    'Percentage Not Under More Section': percentage_not_under_more_section_by_domain,\n",
        "    'Overall Percentage Contribution': overall_percentage_contribution_by_domain\n",
        "})\n",
        "\n",
        "\n",
        "# Display the result\n",
        "display(source_domain_summary_df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 327
        },
        "id": "LBwIKa62FkrR",
        "outputId": "4b212193-234e-497e-80bf-0fcd5408bff2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                 Total Citation Counts  Not Under More Section Counts  \\\n",
              "source_domain                                                           \n",
              "alltop.vn                            9                            9.0   \n",
              "amentor.vn                           9                            NaN   \n",
              "ancarat.com                         40                            9.0   \n",
              "anphatgems.vn                        7                            4.0   \n",
              "bachhoaxanh.com                      4                            NaN   \n",
              "\n",
              "                 Average Citation Position  Citation Probability  \\\n",
              "source_domain                                                      \n",
              "alltop.vn                         5.444444              0.005875   \n",
              "amentor.vn                       18.000000              0.005875   \n",
              "ancarat.com                       8.425000              0.026110   \n",
              "anphatgems.vn                     9.571429              0.004569   \n",
              "bachhoaxanh.com                  12.500000              0.002611   \n",
              "\n",
              "                 Percentage Not Under More Section  \\\n",
              "source_domain                                        \n",
              "alltop.vn                                 1.000000   \n",
              "amentor.vn                                0.000000   \n",
              "ancarat.com                               0.225000   \n",
              "anphatgems.vn                             0.571429   \n",
              "bachhoaxanh.com                           0.000000   \n",
              "\n",
              "                 Overall Percentage Contribution  \n",
              "source_domain                                     \n",
              "alltop.vn                               0.005875  \n",
              "amentor.vn                              0.005875  \n",
              "ancarat.com                             0.026110  \n",
              "anphatgems.vn                           0.004569  \n",
              "bachhoaxanh.com                         0.002611  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-78fad8a9-a641-4486-8f5a-bacf8c535e92\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Total Citation Counts</th>\n",
              "      <th>Not Under More Section Counts</th>\n",
              "      <th>Average Citation Position</th>\n",
              "      <th>Citation Probability</th>\n",
              "      <th>Percentage Not Under More Section</th>\n",
              "      <th>Overall Percentage Contribution</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>source_domain</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>alltop.vn</th>\n",
              "      <td>9</td>\n",
              "      <td>9.0</td>\n",
              "      <td>5.444444</td>\n",
              "      <td>0.005875</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.005875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>amentor.vn</th>\n",
              "      <td>9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>0.005875</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.005875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ancarat.com</th>\n",
              "      <td>40</td>\n",
              "      <td>9.0</td>\n",
              "      <td>8.425000</td>\n",
              "      <td>0.026110</td>\n",
              "      <td>0.225000</td>\n",
              "      <td>0.026110</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>anphatgems.vn</th>\n",
              "      <td>7</td>\n",
              "      <td>4.0</td>\n",
              "      <td>9.571429</td>\n",
              "      <td>0.004569</td>\n",
              "      <td>0.571429</td>\n",
              "      <td>0.004569</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>bachhoaxanh.com</th>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12.500000</td>\n",
              "      <td>0.002611</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.002611</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78fad8a9-a641-4486-8f5a-bacf8c535e92')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-78fad8a9-a641-4486-8f5a-bacf8c535e92 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-78fad8a9-a641-4486-8f5a-bacf8c535e92');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-f9689f66-367c-417e-87c7-f57bc786381c\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9689f66-367c-417e-87c7-f57bc786381c')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-f9689f66-367c-417e-87c7-f57bc786381c button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(source_domain_summary_df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"source_domain\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"amentor.vn\",\n          \"bachhoaxanh.com\",\n          \"ancarat.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Citation Counts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 4,\n        \"max\": 40,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          40,\n          4,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Not Under More Section Counts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8867513459481287,\n        \"min\": 4.0,\n        \"max\": 9.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Citation Position\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.758184760591313,\n        \"min\": 5.444444444444445,\n        \"max\": 18.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          18.0,\n          12.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Citation Probability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0096530737941511,\n        \"min\": 0.0026109660574412533,\n        \"max\": 0.02610966057441253,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.02610966057441253,\n          0.0026109660574412533\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage Not Under More Section\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4277044802769543,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0,\n          0.5714285714285714\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Percentage Contribution\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0096530737941511,\n        \"min\": 0.0026109660574412533,\n        \"max\": 0.02610966057441253,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.02610966057441253,\n          0.0026109660574412533\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Combine the calculated metrics into a DataFrame (assuming metrics are calculated in a previous cell)\n",
        "# If source_domain is the index, reset it to make it a column\n",
        "if source_domain_summary_df.index.name == 'source_domain':\n",
        "    source_domain_summary_df = source_domain_summary_df.reset_index()\n",
        "    source_domain_summary_df = source_domain_summary_df.rename(columns={'index': 'Source Domain'})\n",
        "elif 'source_domain' in source_domain_summary_df.columns:\n",
        "     source_domain_summary_df = source_domain_summary_df.rename(columns={'source_domain': 'Source Domain'})\n",
        "\n",
        "\n",
        "# Create a new sheet with the source domain summary\n",
        "sheet_source_domain_summary_new = sheets.InteractiveSheet(df=source_domain_summary_df)\n",
        "\n",
        "display(source_domain_summary_df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 917
        },
        "id": "XuV2oPt_FtlM",
        "outputId": "2621209a-4885-4e66-9277-f2ddcee62d02"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "https://docs.google.com/spreadsheets/d/1FANds3E0yZFPheBCgT74xDi5f7Avifuw9azrsoV7Tao/edit#gid=0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.lib.display.IFrame at 0x795b58d5abd0>"
            ],
            "text/html": [
              "\n",
              "        <iframe\n",
              "            width=\"100%\"\n",
              "            height=\"600\"\n",
              "            src=\"https://docs.google.com/spreadsheets/d/1FANds3E0yZFPheBCgT74xDi5f7Avifuw9azrsoV7Tao/edit?rm=embedded#gid=0\"\n",
              "            frameborder=\"0\"\n",
              "            allowfullscreen\n",
              "            \n",
              "        ></iframe>\n",
              "        "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "     source_domain  Total Citation Counts  Not Under More Section Counts  \\\n",
              "0        alltop.vn                      9                            9.0   \n",
              "1       amentor.vn                      9                            NaN   \n",
              "2      ancarat.com                     40                            9.0   \n",
              "3    anphatgems.vn                      7                            4.0   \n",
              "4  bachhoaxanh.com                      4                            NaN   \n",
              "\n",
              "   Average Citation Position  Citation Probability  \\\n",
              "0                   5.444444              0.005875   \n",
              "1                  18.000000              0.005875   \n",
              "2                   8.425000              0.026110   \n",
              "3                   9.571429              0.004569   \n",
              "4                  12.500000              0.002611   \n",
              "\n",
              "   Percentage Not Under More Section  Overall Percentage Contribution  \n",
              "0                           1.000000                         0.005875  \n",
              "1                           0.000000                         0.005875  \n",
              "2                           0.225000                         0.026110  \n",
              "3                           0.571429                         0.004569  \n",
              "4                           0.000000                         0.002611  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2306df37-9852-4e64-861e-2078281ac154\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>source_domain</th>\n",
              "      <th>Total Citation Counts</th>\n",
              "      <th>Not Under More Section Counts</th>\n",
              "      <th>Average Citation Position</th>\n",
              "      <th>Citation Probability</th>\n",
              "      <th>Percentage Not Under More Section</th>\n",
              "      <th>Overall Percentage Contribution</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>alltop.vn</td>\n",
              "      <td>9</td>\n",
              "      <td>9.0</td>\n",
              "      <td>5.444444</td>\n",
              "      <td>0.005875</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.005875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>amentor.vn</td>\n",
              "      <td>9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>0.005875</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.005875</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>ancarat.com</td>\n",
              "      <td>40</td>\n",
              "      <td>9.0</td>\n",
              "      <td>8.425000</td>\n",
              "      <td>0.026110</td>\n",
              "      <td>0.225000</td>\n",
              "      <td>0.026110</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>anphatgems.vn</td>\n",
              "      <td>7</td>\n",
              "      <td>4.0</td>\n",
              "      <td>9.571429</td>\n",
              "      <td>0.004569</td>\n",
              "      <td>0.571429</td>\n",
              "      <td>0.004569</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>bachhoaxanh.com</td>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12.500000</td>\n",
              "      <td>0.002611</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.002611</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2306df37-9852-4e64-861e-2078281ac154')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2306df37-9852-4e64-861e-2078281ac154 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2306df37-9852-4e64-861e-2078281ac154');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-e4699d5e-0db1-4d22-9f9d-b5eb8b8e186d\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e4699d5e-0db1-4d22-9f9d-b5eb8b8e186d')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-e4699d5e-0db1-4d22-9f9d-b5eb8b8e186d button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(source_domain_summary_df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"source_domain\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"amentor.vn\",\n          \"bachhoaxanh.com\",\n          \"ancarat.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Citation Counts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 4,\n        \"max\": 40,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          40,\n          4,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Not Under More Section Counts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.8867513459481287,\n        \"min\": 4.0,\n        \"max\": 9.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Citation Position\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.758184760591313,\n        \"min\": 5.444444444444445,\n        \"max\": 18.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          18.0,\n          12.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Citation Probability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0096530737941511,\n        \"min\": 0.0026109660574412533,\n        \"max\": 0.02610966057441253,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.02610966057441253,\n          0.0026109660574412533\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage Not Under More Section\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4277044802769543,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0,\n          0.5714285714285714\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Percentage Contribution\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0096530737941511,\n        \"min\": 0.0026109660574412533,\n        \"max\": 0.02610966057441253,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.02610966057441253,\n          0.0026109660574412533\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**XUẤT DỮ LIỆU CHO BỘ PROMPT SEONGON**"
      ],
      "metadata": {
        "id": "OSmyquqO5NvK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install -q pandas sqlalchemy psycopg2-binary\n",
        "import os, pandas as pd\n",
        "from sqlalchemy import create_engine, text\n",
        "\n",
        "# NÊN LƯU CHUỖI KẾT NỐI VÀO ENV TRƯỚC (để tránh lộ key)\n",
        "DB_CONNECTION = os.environ.get(\"SUPABASE_DB_URL\") or \"postgresql://postgres.cyoeasqvynleadbahpkz:AITEAMseongon%402025@aws-1-ap-southeast-1.pooler.supabase.com:6543/postgres\"\n",
        "\n",
        "# Tạo engine có SSL\n",
        "engine = create_engine(DB_CONNECTION, connect_args={\"sslmode\": \"require\"})\n",
        "\n",
        "q = \"\"\"\n",
        "SELECT\n",
        "    c.prompt_run_id,\n",
        "    c.source_url,\n",
        "    c.source_domain,\n",
        "    c.source_title,\n",
        "    c.citation_position,\n",
        "    c.source_type,\n",
        "    c.source_under_more_section,\n",
        "    comp.company_name,\n",
        "    comp.domain AS competitor_domain,\n",
        "    prc.mention_position\n",
        "FROM\n",
        "    public.citations c\n",
        "LEFT JOIN public.prompt_run_competitors prc ON prc.prompt_run_id = c. prompt_run_id\n",
        "LEFT JOIN\n",
        "    public.competitors comp ON prc.competitor_id = comp.id\n",
        "\"\"\"\n",
        "df = pd.read_sql(q, engine)\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 470
        },
        "id": "U21s7jwZ5WjA",
        "outputId": "0468db7a-ded3-482d-aa4e-a575b78dc4d2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.0/3.0 MB\u001b[0m \u001b[31m7.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25h"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                          prompt_run_id  \\\n",
              "0  f02c09e2-d96b-4523-a132-7c437a807ef4   \n",
              "1  f02c09e2-d96b-4523-a132-7c437a807ef4   \n",
              "2  f02c09e2-d96b-4523-a132-7c437a807ef4   \n",
              "3  f02c09e2-d96b-4523-a132-7c437a807ef4   \n",
              "4  f02c09e2-d96b-4523-a132-7c437a807ef4   \n",
              "\n",
              "                                          source_url     source_domain  \\\n",
              "0  https://www.goodfirms.co/seo-agencies/vietnam?...      goodfirms.co   \n",
              "1  https://www.10seos.com/vn/best-seo-companies-i...        10seos.com   \n",
              "2  https://www.zeracreative.com/blog/seo-companie...  zeracreative.com   \n",
              "3  https://www.semcrowd.com/vn/rankings-of-best-s...      semcrowd.com   \n",
              "4  https://clutch.co/vn/seo-firms?utm_source=chat...         clutch.co   \n",
              "\n",
              "                                        source_title  citation_position  \\\n",
              "0  Best SEO Companies in Vietnam - July 2025 Revi...                 13   \n",
              "1                      Best SEO companies in Vietnam                 12   \n",
              "2                           SEO companies in Vietnam                 11   \n",
              "3      Rankings of best SEO consulting firms Vietnam                 10   \n",
              "4  Top SEO Companies in Vietnam - Jul 2025 Rankin...                  9   \n",
              "\n",
              "  source_type  source_under_more_section  company_name competitor_domain  \\\n",
              "0   directory                       True  AJ Marketing              None   \n",
              "1   directory                       True  AJ Marketing              None   \n",
              "2        blog                       True  AJ Marketing              None   \n",
              "3   directory                       True  AJ Marketing              None   \n",
              "4   directory                       True  AJ Marketing              None   \n",
              "\n",
              "   mention_position  \n",
              "0               1.0  \n",
              "1               1.0  \n",
              "2               1.0  \n",
              "3               1.0  \n",
              "4               1.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7a23c64c-f309-4b4e-9d27-20d4b0a77ab4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>prompt_run_id</th>\n",
              "      <th>source_url</th>\n",
              "      <th>source_domain</th>\n",
              "      <th>source_title</th>\n",
              "      <th>citation_position</th>\n",
              "      <th>source_type</th>\n",
              "      <th>source_under_more_section</th>\n",
              "      <th>company_name</th>\n",
              "      <th>competitor_domain</th>\n",
              "      <th>mention_position</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>f02c09e2-d96b-4523-a132-7c437a807ef4</td>\n",
              "      <td>https://www.goodfirms.co/seo-agencies/vietnam?...</td>\n",
              "      <td>goodfirms.co</td>\n",
              "      <td>Best SEO Companies in Vietnam - July 2025 Revi...</td>\n",
              "      <td>13</td>\n",
              "      <td>directory</td>\n",
              "      <td>True</td>\n",
              "      <td>AJ Marketing</td>\n",
              "      <td>None</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>f02c09e2-d96b-4523-a132-7c437a807ef4</td>\n",
              "      <td>https://www.10seos.com/vn/best-seo-companies-i...</td>\n",
              "      <td>10seos.com</td>\n",
              "      <td>Best SEO companies in Vietnam</td>\n",
              "      <td>12</td>\n",
              "      <td>directory</td>\n",
              "      <td>True</td>\n",
              "      <td>AJ Marketing</td>\n",
              "      <td>None</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>f02c09e2-d96b-4523-a132-7c437a807ef4</td>\n",
              "      <td>https://www.zeracreative.com/blog/seo-companie...</td>\n",
              "      <td>zeracreative.com</td>\n",
              "      <td>SEO companies in Vietnam</td>\n",
              "      <td>11</td>\n",
              "      <td>blog</td>\n",
              "      <td>True</td>\n",
              "      <td>AJ Marketing</td>\n",
              "      <td>None</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>f02c09e2-d96b-4523-a132-7c437a807ef4</td>\n",
              "      <td>https://www.semcrowd.com/vn/rankings-of-best-s...</td>\n",
              "      <td>semcrowd.com</td>\n",
              "      <td>Rankings of best SEO consulting firms Vietnam</td>\n",
              "      <td>10</td>\n",
              "      <td>directory</td>\n",
              "      <td>True</td>\n",
              "      <td>AJ Marketing</td>\n",
              "      <td>None</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>f02c09e2-d96b-4523-a132-7c437a807ef4</td>\n",
              "      <td>https://clutch.co/vn/seo-firms?utm_source=chat...</td>\n",
              "      <td>clutch.co</td>\n",
              "      <td>Top SEO Companies in Vietnam - Jul 2025 Rankin...</td>\n",
              "      <td>9</td>\n",
              "      <td>directory</td>\n",
              "      <td>True</td>\n",
              "      <td>AJ Marketing</td>\n",
              "      <td>None</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a23c64c-f309-4b4e-9d27-20d4b0a77ab4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7a23c64c-f309-4b4e-9d27-20d4b0a77ab4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7a23c64c-f309-4b4e-9d27-20d4b0a77ab4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-4991a191-52a9-43ca-8d76-4bf1186c7e5c\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4991a191-52a9-43ca-8d76-4bf1186c7e5c')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-4991a191-52a9-43ca-8d76-4bf1186c7e5c button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 3626,\n  \"fields\": [\n    {\n      \"column\": \"prompt_run_id\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"f02c09e2-d96b-4523-a132-7c437a807ef4\",\n          \"235c8717-91d2-402e-9436-35cb461ab187\",\n          \"af0e4945-0dcf-485d-9828-f83494c79d7c\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"source_url\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 211,\n        \"samples\": [\n          \"https://seovip.hanoi.vn/?utm_source=chatgpt.com\",\n          \"https://bepos.io/blogs/khoa-hoc-seo/?utm_source=chatgpt.com\",\n          \"https://aiseowp.com/dich-vu-seo-tai-ha-noi/?utm_source=chatgpt.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"source_domain\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 148,\n        \"samples\": [\n          \"pam.vn\",\n          \"seosona.com\",\n          \"iinfotanks.com\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"source_title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 175,\n        \"samples\": [\n          \"Top 6 most trusted and affordable SEO service providers in Hanoi\",\n          \"D\\u1ecbch v\\u1ee5 SEO t\\u1ed5ng th\\u1ec3 overview\",\n          \"Top 10 Best SEO Agencies in Vietnam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"citation_position\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 1,\n        \"max\": 24,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          5,\n          21,\n          13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"source_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"website\",\n          \"article\",\n          \"directory\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"source_under_more_section\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"company_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 130,\n        \"samples\": [\n          \"Digitally Crowd\",\n          \"Xu\\u00e2n Media\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"competitor_domain\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 26,\n        \"samples\": [\n          \"monamedia.co\",\n          \"sieutocviet.org\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mention_position\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.19371934718535,\n        \"min\": 1.0,\n        \"max\": 26.0,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          9.0,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import sheets\n",
        "\n",
        "# Convert UUID column to string before exporting to sheets\n",
        "df['prompt_run_id'] = df['prompt_run_id'].astype(str)\n",
        "\n",
        "sheet = sheets.InteractiveSheet(df=df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 659
        },
        "id": "rulwdsDL5ewn",
        "outputId": "8e731233-3834-469a-dc80-7788ecb03f8b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "https://docs.google.com/spreadsheets/d/1IIbIR0GVhJIDS8d9kW28JntY9Myq3_YtnUp_EkAuxpo/edit#gid=0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.lib.display.IFrame at 0x795b5cbf1d30>"
            ],
            "text/html": [
              "\n",
              "        <iframe\n",
              "            width=\"100%\"\n",
              "            height=\"600\"\n",
              "            src=\"https://docs.google.com/spreadsheets/d/1IIbIR0GVhJIDS8d9kW28JntY9Myq3_YtnUp_EkAuxpo/edit?rm=embedded#gid=0\"\n",
              "            frameborder=\"0\"\n",
              "            allowfullscreen\n",
              "            \n",
              "        ></iframe>\n",
              "        "
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Define the mapping for company name integration for SEONGON data\n",
        "seongon_company_name_mapping = {\n",
        "    'DDI': 'DDI Việt Nam',\n",
        "    'DDI Việt Nam': 'DDI Việt Nam',\n",
        "    'GCOads': 'GCO Group',\n",
        "    'GCO GROUP': 'GCO Group',\n",
        "    'GTV': 'GTV SEO',\n",
        "    'GTV SEO': 'GTV SEO',\n",
        "    'Navee': 'NAVEE',\n",
        "    'NAVEE': 'NAVEE',\n",
        "    'SEO Thanh Cong': 'SEO Thành Công',\n",
        "    'SEO Thành Công': 'SEO Thành Công',\n",
        "    'SEOplus': 'SEO Plus',\n",
        "    'SEO Plus': 'SEO Plus',\n",
        "    'SEOVIET': 'SEOVIET (SEO Việt)',\n",
        "    'SEO Việt': 'SEOVIET (SEO Việt)',\n",
        "    'SEOngon': 'SEONGON',\n",
        "    'SEONGON': 'SEONGON',\n",
        "    'Tech-One.io': 'Tech-One',\n",
        "    'Tech-One': 'Tech-One',\n",
        "    'TOS': 'TopOnSeek (TOS)',\n",
        "    'TopOnSeek (TOS)': 'TopOnSeek (TOS)',\n",
        "    'URALA International': 'URALA',\n",
        "    'Urala Communications': 'URALA',\n",
        "    'URALA': 'URALA',\n",
        "    'Vinalink Media': 'Vinalink',\n",
        "    'Vinalink': 'Vinalink',\n",
        "    'VietProtocol': 'Viet Protocol',\n",
        "    'Viet Protocol': 'Viet Protocol',\n",
        "    'VietSolution': 'Viet Solution',\n",
        "    'Viet Solution': 'Viet Solution',\n",
        "    'Giải pháp SEO': 'Giải Pháp SEO',\n",
        "    'Giải Pháp SEO': 'Giải Pháp SEO'\n",
        "}\n",
        "\n",
        "# Apply the mapping to the 'company_name' column\n",
        "df['company_name'] = df['company_name'].replace(seongon_company_name_mapping)\n",
        "\n",
        "# Exclude rows where company_name is in the list\n",
        "excluded_companies = ['Coursera', 'HubSpot Academy', 'FPT Skillking', 'IMTA', 'Viện IT', 'PACE']\n",
        "df = df[~df['company_name'].isin(excluded_companies)].copy()\n",
        "\n",
        "\n",
        "# Calculate total number of mentions after filtering\n",
        "total_mentions = df['mention_position'].notna().sum()\n",
        "\n",
        "# Calculate mention probability for each company after filtering\n",
        "mention_counts = df.groupby('company_name')['mention_position'].count()\n",
        "mention_probability = mention_counts / total_mentions\n",
        "\n",
        "# Calculate average mention position for each company after filtering\n",
        "average_mention_position_mention = df.groupby('company_name')['mention_position'].mean()\n",
        "\n",
        "# Add the new columns to the DataFrame\n",
        "df['mention_probability'] = df['company_name'].map(mention_probability)\n",
        "df['mention_count'] = df['company_name'].map(mention_counts)\n",
        "df['average_mention_position'] = df['company_name'].map(average_mention_position_mention)\n",
        "\n",
        "# Group by company_name and select the first occurrence of the probability and new columns\n",
        "company_probability_df = df.groupby('company_name')[['mention_probability', 'mention_count', 'average_mention_position']].first().reset_index()\n",
        "\n",
        "display(company_probability_df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "Cn2n4ywX5jxY",
        "outputId": "9a304160-9672-46a3-e6d1-0ddec65cc084"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "   company_name  mention_probability  mention_count  average_mention_position\n",
              "0  AJ Marketing             0.017745             62                  5.467742\n",
              "1  AUN Việt Nam             0.003721             13                 21.000000\n",
              "2        AZASEO             0.004293             15                 12.000000\n",
              "3       Admicro             0.003434             12                  7.000000\n",
              "4        Adtima             0.003434             12                 22.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5a7ef070-5bd8-44df-b422-e478966ee8b2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>company_name</th>\n",
              "      <th>mention_probability</th>\n",
              "      <th>mention_count</th>\n",
              "      <th>average_mention_position</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>AJ Marketing</td>\n",
              "      <td>0.017745</td>\n",
              "      <td>62</td>\n",
              "      <td>5.467742</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AUN Việt Nam</td>\n",
              "      <td>0.003721</td>\n",
              "      <td>13</td>\n",
              "      <td>21.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>AZASEO</td>\n",
              "      <td>0.004293</td>\n",
              "      <td>15</td>\n",
              "      <td>12.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Admicro</td>\n",
              "      <td>0.003434</td>\n",
              "      <td>12</td>\n",
              "      <td>7.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Adtima</td>\n",
              "      <td>0.003434</td>\n",
              "      <td>12</td>\n",
              "      <td>22.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a7ef070-5bd8-44df-b422-e478966ee8b2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5a7ef070-5bd8-44df-b422-e478966ee8b2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5a7ef070-5bd8-44df-b422-e478966ee8b2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-1db14484-fb05-4bcd-80c9-11de7cc35e68\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1db14484-fb05-4bcd-80c9-11de7cc35e68')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-1db14484-fb05-4bcd-80c9-11de7cc35e68 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(company_probability_df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"company_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"AUN Vi\\u1ec7t Nam\",\n          \"Adtima\",\n          \"AZASEO\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mention_probability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.006281529772143632,\n        \"min\": 0.0034344590726960505,\n        \"max\": 0.017744705208929592,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.003720663995420721,\n          0.0034344590726960505,\n          0.017744705208929592\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mention_count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 12,\n        \"max\": 62,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          13,\n          12,\n          62\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"average_mention_position\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.705792650636908,\n        \"min\": 5.467741935483871,\n        \"max\": 22.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          21.0,\n          22.0,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sheet_company_probabilities_new = sheets.InteractiveSheet(df=company_probability_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 659
        },
        "id": "rynxhDZ27iRY",
        "outputId": "a9687bf8-ed84-4741-e57c-bd253e02e3ab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "https://docs.google.com/spreadsheets/d/1g8VEXyvmC0HalwrdBoBxDoVnTltzFhyPHwwR2RsfoqE/edit#gid=0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.lib.display.IFrame at 0x795b5cf630e0>"
            ],
            "text/html": [
              "\n",
              "        <iframe\n",
              "            width=\"100%\"\n",
              "            height=\"600\"\n",
              "            src=\"https://docs.google.com/spreadsheets/d/1g8VEXyvmC0HalwrdBoBxDoVnTltzFhyPHwwR2RsfoqE/edit?rm=embedded#gid=0\"\n",
              "            frameborder=\"0\"\n",
              "            allowfullscreen\n",
              "            \n",
              "        ></iframe>\n",
              "        "
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 327
        },
        "id": "1fa37d07",
        "outputId": "e60b9d08-047e-4bfc-9337-35866d33fcc6"
      },
      "source": [
        "# Calculate total number of citations for each source domain\n",
        "total_citation_counts_by_domain = df.groupby('source_domain').size()\n",
        "\n",
        "# Calculate the number of citations not under the \"more section\" for each source domain\n",
        "not_under_more_section_counts_by_domain = df[df['source_under_more_section'] == False].groupby('source_domain').size()\n",
        "\n",
        "# Calculate the average citation position for each source domain\n",
        "average_citation_position_by_domain = df.groupby('source_domain')['citation_position'].mean()\n",
        "\n",
        "# Calculate total number of citations across all source domains\n",
        "total_citations_all_domains = df.shape[0]\n",
        "\n",
        "# Calculate citation probability for each source domain\n",
        "citation_probability_by_domain = total_citation_counts_by_domain / total_citations_all_domains\n",
        "\n",
        "# Calculate the percentage of citations not under the \"more section\" for each source domain\n",
        "percentage_not_under_more_section_by_domain = (not_under_more_section_counts_by_domain / total_citation_counts_by_domain).fillna(0)\n",
        "\n",
        "# Calculate the contribution of each source domain to the overall data percentage\n",
        "overall_percentage_contribution_by_domain = (total_citation_counts_by_domain / total_citations_all_domains)\n",
        "\n",
        "\n",
        "# Combine the calculated metrics into a DataFrame for display\n",
        "source_domain_summary_df = pd.DataFrame({\n",
        "    'Total Citation Counts': total_citation_counts_by_domain,\n",
        "    'Not Under More Section Counts': not_under_more_section_counts_by_domain,\n",
        "    'Average Citation Position': average_citation_position_by_domain,\n",
        "    'Citation Probability': citation_probability_by_domain,\n",
        "    'Percentage Not Under More Section': percentage_not_under_more_section_by_domain,\n",
        "    'Overall Percentage Contribution': overall_percentage_contribution_by_domain\n",
        "})\n",
        "\n",
        "\n",
        "# Display the result\n",
        "display(source_domain_summary_df.head())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "               Total Citation Counts  Not Under More Section Counts  \\\n",
              "source_domain                                                         \n",
              "10seos.com                        47                            NaN   \n",
              "24hviet.net                        7                            7.0   \n",
              "51green.org                        7                            7.0   \n",
              "admarket.vn                        9                            NaN   \n",
              "aiseowp.com                        6                            NaN   \n",
              "\n",
              "               Average Citation Position  Citation Probability  \\\n",
              "source_domain                                                    \n",
              "10seos.com                     15.744681              0.013406   \n",
              "24hviet.net                     2.000000              0.001997   \n",
              "51green.org                     4.000000              0.001997   \n",
              "admarket.vn                    12.000000              0.002567   \n",
              "aiseowp.com                    14.000000              0.001711   \n",
              "\n",
              "               Percentage Not Under More Section  \\\n",
              "source_domain                                      \n",
              "10seos.com                                   0.0   \n",
              "24hviet.net                                  1.0   \n",
              "51green.org                                  1.0   \n",
              "admarket.vn                                  0.0   \n",
              "aiseowp.com                                  0.0   \n",
              "\n",
              "               Overall Percentage Contribution  \n",
              "source_domain                                   \n",
              "10seos.com                            0.013406  \n",
              "24hviet.net                           0.001997  \n",
              "51green.org                           0.001997  \n",
              "admarket.vn                           0.002567  \n",
              "aiseowp.com                           0.001711  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-373c8ea5-a26a-4e8e-90a9-295c1be8451c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Total Citation Counts</th>\n",
              "      <th>Not Under More Section Counts</th>\n",
              "      <th>Average Citation Position</th>\n",
              "      <th>Citation Probability</th>\n",
              "      <th>Percentage Not Under More Section</th>\n",
              "      <th>Overall Percentage Contribution</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>source_domain</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>10seos.com</th>\n",
              "      <td>47</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.744681</td>\n",
              "      <td>0.013406</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.013406</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24hviet.net</th>\n",
              "      <td>7</td>\n",
              "      <td>7.0</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.001997</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.001997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51green.org</th>\n",
              "      <td>7</td>\n",
              "      <td>7.0</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>0.001997</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.001997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>admarket.vn</th>\n",
              "      <td>9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>0.002567</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.002567</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>aiseowp.com</th>\n",
              "      <td>6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>0.001711</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.001711</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-373c8ea5-a26a-4e8e-90a9-295c1be8451c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-373c8ea5-a26a-4e8e-90a9-295c1be8451c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-373c8ea5-a26a-4e8e-90a9-295c1be8451c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-29f0ee51-dd44-4de5-9524-7754f68d6801\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-29f0ee51-dd44-4de5-9524-7754f68d6801')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-29f0ee51-dd44-4de5-9524-7754f68d6801 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(source_domain_summary_df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"source_domain\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"24hviet.net\",\n          \"aiseowp.com\",\n          \"51green.org\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Citation Counts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 6,\n        \"max\": 47,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          7,\n          6,\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Not Under More Section Counts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 7.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Citation Position\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.164090873516301,\n        \"min\": 2.0,\n        \"max\": 15.74468085106383,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Citation Probability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.005079894320797076,\n        \"min\": 0.0017113519680547634,\n        \"max\": 0.013405590416428978,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0019965772960638907\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage Not Under More Section\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5477225575051662,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Percentage Contribution\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.005079894320797076,\n        \"min\": 0.0017113519680547634,\n        \"max\": 0.013405590416428978,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0019965772960638907\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 917
        },
        "id": "59b86eb7",
        "outputId": "41bb83f0-63de-4c16-d6f5-e26745ff5585"
      },
      "source": [
        "# Combine the calculated metrics into a DataFrame (assuming metrics are calculated in a previous cell)\n",
        "# If source_domain is the index, reset it to make it a column\n",
        "if source_domain_summary_df.index.name == 'source_domain':\n",
        "    source_domain_summary_df = source_domain_summary_df.reset_index()\n",
        "    source_domain_summary_df = source_domain_summary_df.rename(columns={'index': 'Source Domain'})\n",
        "elif 'source_domain' in source_domain_summary_df.columns:\n",
        "     source_domain_summary_df = source_domain_summary_df.rename(columns={'source_domain': 'Source Domain'})\n",
        "\n",
        "\n",
        "# Create a new sheet with the source domain summary\n",
        "sheet_source_domain_summary_new = sheets.InteractiveSheet(df=source_domain_summary_df)\n",
        "\n",
        "display(source_domain_summary_df.head())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "https://docs.google.com/spreadsheets/d/1ip86muXznTIIgf-z01UPXu-6FyrdHLi6MXa-VCYCqZ8/edit#gid=0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.lib.display.IFrame at 0x795b58c781d0>"
            ],
            "text/html": [
              "\n",
              "        <iframe\n",
              "            width=\"100%\"\n",
              "            height=\"600\"\n",
              "            src=\"https://docs.google.com/spreadsheets/d/1ip86muXznTIIgf-z01UPXu-6FyrdHLi6MXa-VCYCqZ8/edit?rm=embedded#gid=0\"\n",
              "            frameborder=\"0\"\n",
              "            allowfullscreen\n",
              "            \n",
              "        ></iframe>\n",
              "        "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  source_domain  Total Citation Counts  Not Under More Section Counts  \\\n",
              "0    10seos.com                     47                            NaN   \n",
              "1   24hviet.net                      7                            7.0   \n",
              "2   51green.org                      7                            7.0   \n",
              "3   admarket.vn                      9                            NaN   \n",
              "4   aiseowp.com                      6                            NaN   \n",
              "\n",
              "   Average Citation Position  Citation Probability  \\\n",
              "0                  15.744681              0.013406   \n",
              "1                   2.000000              0.001997   \n",
              "2                   4.000000              0.001997   \n",
              "3                  12.000000              0.002567   \n",
              "4                  14.000000              0.001711   \n",
              "\n",
              "   Percentage Not Under More Section  Overall Percentage Contribution  \n",
              "0                                0.0                         0.013406  \n",
              "1                                1.0                         0.001997  \n",
              "2                                1.0                         0.001997  \n",
              "3                                0.0                         0.002567  \n",
              "4                                0.0                         0.001711  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8e5842da-ef29-44f9-b740-0de66eab2edc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>source_domain</th>\n",
              "      <th>Total Citation Counts</th>\n",
              "      <th>Not Under More Section Counts</th>\n",
              "      <th>Average Citation Position</th>\n",
              "      <th>Citation Probability</th>\n",
              "      <th>Percentage Not Under More Section</th>\n",
              "      <th>Overall Percentage Contribution</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10seos.com</td>\n",
              "      <td>47</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.744681</td>\n",
              "      <td>0.013406</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.013406</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>24hviet.net</td>\n",
              "      <td>7</td>\n",
              "      <td>7.0</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.001997</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.001997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>51green.org</td>\n",
              "      <td>7</td>\n",
              "      <td>7.0</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>0.001997</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.001997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>admarket.vn</td>\n",
              "      <td>9</td>\n",
              "      <td>NaN</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>0.002567</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.002567</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>aiseowp.com</td>\n",
              "      <td>6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>0.001711</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.001711</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e5842da-ef29-44f9-b740-0de66eab2edc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8e5842da-ef29-44f9-b740-0de66eab2edc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8e5842da-ef29-44f9-b740-0de66eab2edc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-3d53862f-3937-41fa-bf5d-8ab2bcb93a4a\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3d53862f-3937-41fa-bf5d-8ab2bcb93a4a')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-3d53862f-3937-41fa-bf5d-8ab2bcb93a4a button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(source_domain_summary_df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"source_domain\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"24hviet.net\",\n          \"aiseowp.com\",\n          \"51green.org\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Citation Counts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17,\n        \"min\": 6,\n        \"max\": 47,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          7,\n          6,\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Not Under More Section Counts\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 7.0,\n        \"max\": 7.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Average Citation Position\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.164090873516301,\n        \"min\": 2.0,\n        \"max\": 15.74468085106383,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Citation Probability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.005079894320797076,\n        \"min\": 0.0017113519680547634,\n        \"max\": 0.013405590416428978,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0019965772960638907\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage Not Under More Section\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5477225575051662,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Overall Percentage Contribution\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.005079894320797076,\n        \"min\": 0.0017113519680547634,\n        \"max\": 0.013405590416428978,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0019965772960638907\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    }
  ]
}